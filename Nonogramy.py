class Nonogram:
    def __init__(self, kolumny, wiersze):
        self.kolumny=kolumny
        self.wiersze=wiersze
    
    def nonogram(nazwa):
        kratki_kol=[]
        kratki_wier=[]
        bloki_kol=[]
        bloki_wier=[]
    
        for i in range(len(nazwa.kolumny)):
            kratki_kol.append(sum(nazwa.kolumny[i]))
            bloki_kol.append(len(nazwa.kolumny[i]))
        for j in range(len(nazwa.wiersze)):
            kratki_wier.append(sum(nazwa.wiersze[j]))
            bloki_wier.append(len(nazwa.wiersze[j]))
        
        return kratki_kol, kratki_wier, bloki_kol, bloki_wier
    
    def wielkosc(nazwa):
        l_kolumn=len(nazwa.kolumny)
        l_wierszy=len(nazwa.wiersze)
        return l_kolumn,l_wierszy

    
    
#PANDA   
kolumny=[[2,1,1,2],[1,1,1,1],[4,7,1],[1,4,4,2,1],[1,5,2,1],
         [2,2,2],[4,2],[3,4,1],[1,2,2,1],[1,3,1],
         [1,2,1],[1,3,1],[1,2,1],[1,3,1],[3,2,2,2],
         [5,4,3],[2,2,4],[1,5,5],[4,4,4],[4]]

wiersze=[[3,3],[1,3,3,1],[3,10,2],[3,2,2,2],[5,4],
         [3,2],[1,1],[1,1],[2,1],[2,1,1],
         [3,3,3,1],[1,1,1,1,1,1,1],[1,1,3,3,1],[1,2,2,1],[1,2,2],
         [1,2,3,2],[1,2,3,3],[1,2,1,4],[1,1,2,4],[3,1,10]]


Panda=Nonogram(kolumny,wiersze)

#KONICZYNA
kolumny=[[2,2],[7],[7,2],[7,2],[3,5,1],
         [5,3,2],[6,1,2],[6,4],[6,1],[5,3],
         [3,5],[7],[7],[7],[2,2]]

wiersze=[[2,2],[7],[7],[7],[3,5,3],
         [5,3,5],[6,1,6],[6,6],[6,1,6],[5,1,5],
         [3,1,3],[2],[2],[4],[2]]

Koniczyna=Nonogram(kolumny,wiersze)


#DZBANEK

kolumny=[[2,1,2],[1,2,1,2,2,1],[2,1,2,3],[1,1,1,1,3,3],[1,1,1,1,2],
         [3,3,1,1],[2,2,1,1,1],[1,1,1,1,1,1],[2,2,1,1,1,1],[2,1,1,1,1],
         [1,2,1,2,2,1],[2,1,3,3,1],[1,1,9,1],[2,9,1],[10,2],
         [6,3],[2,1,4],[2,2,4],[5,4],[3,4]]

wiersze=[[1,4,1],[3,1],[1,1,1],[1,1,1],[3,4],
         [1,6],[1,1],[2,10],[1,1,1,1],[1,12,3],
         [1,10],[1,5,2],[1,4,2],[1,4,2],[1,6],
         [1,5],[3,1,5,4],[3,9,5],[1,3,6],[2,17]]

Dzbanek=Nonogram(kolumny,wiersze)


#UŚMIECH
kolumny=[[2,1],[2,1],[1],[2,1],[2,1]]
wiersze=[[2,2],[2,2],[],[1,1],[3]]

Smile=Nonogram(kolumny,wiersze)


#PIK
kolumny=[[4],[7],[8],[9],[10],
         [10,1],[10,2],[15],[10,2],[10,1]
         ,[10],[9],[8],[7],[4]]

wiersze=[[1],[3],[5],[7],[9],
         [11],[13],[13],[15],[15],
         [15],[6,1,6],[4,1,4],[3],[5]]

Pik=Nonogram(kolumny,wiersze)




#Rozwiązanie koniczyna
#p=[0,0,0,0,0,1,1,0,1,1,0,0,0,0,0,
#   0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,
#   0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,
#   0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,
#   0,1,1,1,0,1,1,1,1,1,0,1,1,1,0,
#   1,1,1,1,1,0,1,1,1,0,1,1,1,1,1,
#   1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,
#   0,1,1,1,1,1,1,0,1,1,1,1,1,1,0,
#   1,1,1,1,1,1,0,1,0,1,1,1,1,1,1,
#   1,1,1,1,1,0,0,1,0,0,1,1,1,1,1,
#   0,1,1,1,0,0,0,1,0,0,0,1,1,1,0,
#   0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,
#   0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,
#   0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,
#   0,0,1,1,0,0,0,0,0,0,0,0,0,0,0]


#Rozwiązanie panda
#p=[0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,1,1,1,0,0,
#   0,0,1,0,0,1,1,1,0,0,0,0,0,0,1,1,1,0,1,0,
#   0,0,1,1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,0,
#   0,0,1,1,1,0,1,1,0,0,0,0,0,0,1,1,0,1,1,0,
#   0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,0,
#   0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,0,
#   0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
#   0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
#   0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,
#   0,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,1,0,
#   0,1,1,1,0,0,0,1,1,1,0,0,0,1,1,1,0,0,1,0,
#   1,0,1,0,0,0,0,1,0,1,0,0,0,1,0,1,0,0,0,1,
#   1,0,1,0,0,0,0,1,1,1,0,0,0,1,1,1,0,0,0,1,
#   0,0,1,0,0,0,0,1,1,0,0,0,0,0,1,1,0,0,0,1,
#   1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,
#   0,1,0,1,1,0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,
#   1,0,0,0,1,1,0,0,0,0,1,1,1,0,0,0,1,1,1,0,
#   0,1,0,0,0,1,1,0,0,0,0,1,0,0,0,1,1,1,1,0,
#   1,0,0,1,0,0,1,1,0,0,0,0,0,0,1,1,1,1,0,0,
#   1,1,1,0,1,0,0,0,1,1,1,1,1,1,1,1,1,1,0,0]
